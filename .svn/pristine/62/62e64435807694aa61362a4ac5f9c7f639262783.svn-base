{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "%config InlineBackend.figure_format = 'svg'\n",
    "import os\n",
    "try:\n",
    "    import Image\n",
    "except ImportError:\n",
    "    from PIL import Image\n",
    "import cv2\n",
    "import numpy as np\n",
    "import pytesseract\n",
    "from matplotlib import pyplot as plt\n",
    "import math\n",
    "from math import radians, degrees\n",
    "from skewManager import imgproc\n",
    "from skewManager.common import ROTATION, SKEW_X, SKEW_Y, DIRECTION_HORIZONTAL, DIRECTION_VERTICAL\n",
    "from tabledetect import detectTable\n",
    "import pandas as pd\n",
    "import json\n",
    "from BaiduAipOcr import BaiduAipOcr\n",
    "\n",
    "\n",
    "\n",
    "tempout = \"temp/\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "def LineToArea(lines):\n",
    "    area = []\n",
    "    if len(lines) <= 1:\n",
    "        return area\n",
    "    for i in range(len(lines)-1):\n",
    "        area.append((lines[i], lines[i+1]))\n",
    "    return area\n",
    "\n",
    "\n",
    "def imgtotable(img,rows,colums,debug=False):\n",
    "    ocrclient = BaiduAipOcr()\n",
    "    tablelist = [[\"\" for col in range(0,len(colums))] for row in range(0,len(rows))]\n",
    "    cloumarea = LineToArea(colums)\n",
    "    rowsarea = LineToArea(rows)\n",
    "    #print(tablelist)\n",
    "    for row, (ystart,yend) in enumerate(rowsarea):\n",
    "        \n",
    "        print(\"行{}：\".format(row),end=\" \")\n",
    "        for colum,(xstart,xend) in enumerate(cloumarea):\n",
    "            roiimg = img[ystart:yend,\n",
    "                  xstart:xend]\n",
    "\n",
    "\n",
    "            if debug:\n",
    "                \n",
    "                cv2.imwrite(\"testimage/{}{}.jpg\".format(row,colum),roiimg)\n",
    "\n",
    "            try:\n",
    "                print(\"列{}：\".format(colum),end=\" \")\n",
    "                if debug:\n",
    "                    text=\" \"\n",
    "                    \n",
    "                else:\n",
    "                    text = ocrclient.image_to_stringforcv2(roiimg)\n",
    "            except Exception as e:\n",
    "                #print(e)\n",
    "                print(\"RECT:[{}:{},{}:{}]\".format(\n",
    "                    ystart, xstart, yend, xend))\n",
    "                text = \"error\"\n",
    "            #print(row,colum)\n",
    "            tablelist[row][colum] = text\n",
    "        print(\" \".format(row))\n",
    "        #print(\"\")\n",
    "    return tablelist"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "from numba import jit\n",
    "@jit\n",
    "def removeStamp(dstimg,pointsTheshold=100,areathreshold = 10000.0,color = (255,255,255),debug=False):\n",
    "    dstimgT = dstimg.copy()\n",
    "    #if maskimg is None:\n",
    "    imgThresh= cv2.bilateralFilter(dstimgT, 21, 21 * 2, 25 / 2);\n",
    "    imgThresh = cv2.fastNlMeansDenoising(imgThresh, None, 21, 11, 21)\n",
    " \n",
    "    imgrayT=cv2.Canny(imgThresh,100,240,3)#Canny边缘检测，参数可更改\n",
    "    #ret,maskimgT = cv2.threshold(imgrayT,10,255,cv2.THRESH_BINARY)  \n",
    "    maskimgT = cv2.adaptiveThreshold(\n",
    "        imgrayT, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY_INV, 35, 9)    \n",
    "    image, contours, hierarchy = cv2.findContours(maskimgT,cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)#contours为轮廓集，可以计算轮廓的长度、面积等  \n",
    "    #emptyImageTT = np.zeros(maskimgT.shape, np.uint8)\n",
    "    #print(len(contours))\n",
    "\n",
    "\n",
    "    #plt.show() \n",
    "    for cnt in contours:  \n",
    "        #print(len(cnt))\n",
    "        if len(cnt) > pointsTheshold:  \n",
    "            S1=cv2.contourArea(cnt)  \n",
    "            ell=cv2.fitEllipse(cnt)  \n",
    "            S2 =math.pi*ell[1][0]*ell[1][1] \n",
    "            #print(S2)\n",
    "            if S1 > areathreshold and (S1/S2)>0.005 and S1 < 100000:#面积比例，可以更改，根据数据集。。。  \n",
    "                #print(S1,S2,ell)\n",
    "                #cv2.drawContours(emptyImageTT, cnt, -1, (255, 255, 255), 2)\n",
    "                cv2.ellipse(dstimgT, ell,color, 15)\n",
    "                cv2.ellipse(dstimgT, ell,color, cv2.FILLED)\n",
    "\n",
    "    if debug:\n",
    "        plt.gcf().set_size_inches(60.0,40.0)\n",
    "        plt.subplot(2,1,1),plt.imshow(imgrayT,'gray')\n",
    "        plt.subplot(2,1,2),plt.imshow(dstimgT,'gray')            \n",
    "    return dstimgT"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "path = 'I:/陈宁/对账单2/10'\n",
    "filename=\"10 中国银行 0833_1.jpg\"\n",
    "filepath=os.path.join(path,filename)\n",
    "iproc_obj = imgproc.ImageProc(filepath)\n",
    "img = removeStamp(iproc_obj.gray_img,debug=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "%reload_ext autoreload\n",
    "%autoreload 2\n",
    "\n",
    "canny_low_thresh=150\n",
    "canny_high_thresh=250\n",
    "canny_kernel_size=3\n",
    "hough_rho_res=1\n",
    "hough_theta_res=np.pi/650\n",
    "hough_votes_thresh=750\n",
    "hscale = 10\n",
    "vscale = 15\n",
    "\n",
    "\n",
    "def ocrimgtoexcel(filename,path,hscale = 10,vscale = 10,debug=False ):\n",
    "    print('1：读取文件{}'.format(filename))\n",
    "    filepath=os.path.join(path,filename)\n",
    "    iproc_obj = imgproc.ImageProc(filepath)\n",
    "    print('图像h={} w={}'.format(iproc_obj.input_img.shape[0],iproc_obj.input_img.shape[1]))\n",
    "\n",
    "    print('2：去除椭圆印章')\n",
    "    #img = iproc_obj.removeEllipseStamp(debug=debug)\n",
    "    # if debug:\n",
    "    # plt.gcf().set_size_inches(90,50)\n",
    "    # plt.subplot(1,1,1),plt.imshow(img,'gray')\n",
    "    # plt.show()\n",
    "    print('3：检测水平线和角度')\n",
    "    sum = 0.0\n",
    "    number = 0\n",
    "    lines_hough = iproc_obj.detect_lines(canny_low_thresh=canny_low_thresh,\n",
    "                                         canny_high_thresh=canny_high_thresh,\n",
    "                                         canny_kernel_size=canny_kernel_size,\n",
    "                                         hough_rho_res=1,\n",
    "                                         hough_theta_res=hough_theta_res,\n",
    "                                         hough_votes_thresh=hough_votes_thresh)\n",
    "\n",
    "\n",
    "    img_lines = iproc_obj.draw_lines(orig_img_as_background=True)\n",
    "    print('omit_on_rot_thresh: ',np.pi/10)\n",
    "    theta_rotate = iproc_obj.find_rotation_or_skew2(rot_thresh=0.001, rot_same_dir_thresh=0.1, omit_on_rot_thresh=np.pi/10,only_direction=DIRECTION_HORIZONTAL)\n",
    "    angle = degrees(theta_rotate[1])\n",
    "    print(\"-----方向{} 校正角度 {}\".format(theta_rotate[0],angle))\n",
    "    if debug:\n",
    "        plt.gcf().set_size_inches(90,50)\n",
    "        plt.subplot(2,1,1),plt.imshow(iproc_obj.gray_img,'gray')\n",
    "        plt.subplot(2,1,2),plt.imshow(img_lines,'gray')\n",
    "        plt.show()\n",
    "    print('3：水平校正')\n",
    "    rotate_image = iproc_obj.rotate_image(iproc_obj.gray_img,-angle)\n",
    "    print(rotate_image.shape)\n",
    "    if debug:\n",
    "        plt.gcf().set_size_inches(40,30)\n",
    "        plt.subplot(1,1,1),plt.imshow(rotate_image,'gray')\n",
    "        plt.show()\n",
    "  \n",
    "    print('4：检测表格上下横线')\n",
    "    bordercut = 20\n",
    "    x1= 0+bordercut\n",
    "    y1= 0+bordercut    # 切掉周边，避免干扰\n",
    "    x2= rotate_image.shape[1]-bordercut\n",
    "    y2= rotate_image.shape[0]-bordercut\n",
    "    dt = detectTable(rotate_image[y1:y2, x1:x2])\n",
    "    #thresh_img = cv2.threshold(~rotate_image, 100, 255, cv2.THRESH_BINARY)[1]\n",
    "    imgThresh= cv2.bilateralFilter(rotate_image, 21, 21 * 2, 25 / 2);\n",
    "    imgThresh = cv2.fastNlMeansDenoising(imgThresh, None, 21, 11, 21)\n",
    "    thresh_img = cv2.adaptiveThreshold(\n",
    "        imgThresh, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY_INV, 45, 9)\n",
    "    h_img = thresh_img.copy()\n",
    "    hscale = hscale\n",
    "    h_size = int(h_img.shape[1]/hscale)\n",
    "\n",
    "    h_structure = cv2.getStructuringElement(\n",
    "        cv2.MORPH_RECT, (h_size, 1))  # 形态学因子\n",
    "    h_dashed_structure = cv2.getStructuringElement(\n",
    "        cv2.MORPH_RECT, (5, 1))  # 形态学因子\n",
    "    h_dilate_imgT = cv2.dilate(h_img, h_dashed_structure, 1) # 虚线转为实线\n",
    "    h_erode_img = cv2.erode(h_dilate_imgT, h_structure, 1) #腐蚀掉非水平的对象\n",
    "    h_dilate_img = cv2.dilate(h_erode_img, h_structure, 1)\n",
    "\n",
    "\n",
    "    v_img = thresh_img.copy()\n",
    "    vscale = vscale\n",
    "    v_size = int(v_img.shape[0]/vscale)\n",
    "\n",
    "    v_structure = cv2.getStructuringElement(\n",
    "        cv2.MORPH_RECT, (1, v_size))  # 形态学因子\n",
    "    v_dashed_structure = cv2.getStructuringElement(\n",
    "        cv2.MORPH_RECT, (1, 3))  # 形态学因子\n",
    "    v_dilate_imgT = cv2.dilate(v_img, v_dashed_structure, 1) # 虚线转为实线\n",
    "    v_erode_img = cv2.erode(v_dilate_imgT, v_structure, 1) #腐蚀掉非水平的对象\n",
    "    v_dilate_img = cv2.dilate(v_erode_img, v_structure, 1)\n",
    "    mask = h_dilate_img + v_dilate_img\n",
    "    print(h_dilate_img.shape)\n",
    "    print(v_dilate_img.shape)\n",
    "    print(mask.shape)\n",
    "\n",
    "    if debug:\n",
    "        plt.gcf().set_size_inches(60,50)\n",
    "        plt.subplot(2,1,1),plt.imshow(mask,'gray')\n",
    "        plt.subplot(2,1,2),plt.imshow(thresh_img,'gray')\n",
    "        plt.show()\n",
    "        \n",
    "\n",
    "    print('5：计算表格上下线坐标')\n",
    "    border =1\n",
    "    dtable = detectTable(rotate_image)\n",
    "    h_threshold = int(rotate_image.shape[0]/8)\n",
    "    v_threshold = int(rotate_image.shape[1]/10)\n",
    "\n",
    "    x_count,x_segmentation = dtable.verticalShadowSplite(v_dilate_img,v_threshold)\n",
    "    y_count,y_segmentation = dtable.horizontalShadowSplite(h_dilate_img,h_threshold)\n",
    "    print(len(x_segmentation),len(y_segmentation))\n",
    "    \n",
    "    #print(len(y_segmentation))\n",
    "    if debug:\n",
    "        emptyImagev=dtable.getShadowimg(rotate_image,x_count,'V')\n",
    "        emptyImageh=dtable.getShadowimg(rotate_image,y_count,'H')\n",
    "        plt.gcf().set_size_inches(60.0,40.0)\n",
    "        plt.subplot(2,1,1),plt.imshow(emptyImagev,'gray')\n",
    "        plt.subplot(2,1,2),plt.imshow(emptyImageh,'gray')\n",
    "        plt.show()\n",
    "\n",
    "    prerows=dt.getLineCor(rotate_image.shape[0],y_segmentation) \n",
    "    if len(prerows) == 0:\n",
    "        prerows.append(0)\n",
    "        prerows.append(rotate_image.shape[0])\n",
    "    if len(prerows) == 1:\n",
    "        rows[0] = 0\n",
    "        prerows.append(rotate_image.shape[0])\n",
    "\n",
    "    precolums=dt.getLineCor(rotate_image.shape[1],x_segmentation)   \n",
    "    print(precolums)\n",
    "    if len(precolums) == 0:\n",
    "        precolums.append(0)\n",
    "        precolums.append(rotate_image.shape[1])\n",
    "\n",
    "    if len(precolums) == 1:\n",
    "        precolums[0] = 0\n",
    "        precolums.append(rotate_image.shape[1])\n",
    "    #colums=dt.getLineCor(rotate_image.shape[1],x_segmentation)  \n",
    "    x1= precolums[0]+border\n",
    "    y1= prerows[0]+border   # 切掉周边，避免干扰 for \n",
    "    x2= precolums[-1]-border\n",
    "    y2= prerows[-1]-border\n",
    "    print(\"左上角x1={} y1={},右下角x2={} y2={}\".format(x1,y1,x2,y2))\n",
    "    #rotate_image = removeStamp(rotate_image)  #去掉印章\n",
    "    tablerect = rotate_image[y1:y2, x1:x2] #获取表格部分\n",
    "    maskT = mask[y1:y2, x1:x2]\n",
    "    if debug:\n",
    "        print(\"行参考{}列参考{}\".format(prerows,precolums))\n",
    "        print(x_segmentation,y_segmentation)\n",
    "\n",
    "        plt.gcf().set_size_inches(40.0,40.0)\n",
    "        plt.subplot(2,1,1),plt.imshow(tablerect,'gray')\n",
    "        plt.subplot(2,1,2),plt.imshow(maskT,'gray')\n",
    "        plt.show()\n",
    "\n",
    "    print('6：分割前预处理')\n",
    "    # 消除噪音 ，便于分割\n",
    "    print(maskT.shape,tablerect.shape)\n",
    "    tableImgNoborder = cv2.add(maskT,tablerect) # 去掉边界\n",
    "\n",
    "    imgbilateral= cv2.bilateralFilter(tableImgNoborder, 15, 50, 30);   # 双边滤波，去除噪音，边缘不变\n",
    "    meansThresh = cv2.fastNlMeansDenoising(imgbilateral, None, 34, 21, 7) # 中值滤波，去除噪音\n",
    "    thresh_img = cv2.adaptiveThreshold(\n",
    "        meansThresh, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY_INV, 25, 11) #二值化,通过阈值删除噪音\n",
    "    x_structure = cv2.getStructuringElement(\n",
    "        cv2.MORPH_RECT, (3, 3))\n",
    "    if len(prerows) > 3:\n",
    "        h_erode_img = maskT\n",
    "    else:\n",
    "        h_img = thresh_img.copy()\n",
    "        hscale = hscale\n",
    "        h_size = int(h_img.shape[1]/hscale)\n",
    "        print(h_size)\n",
    "        h_structure = cv2.getStructuringElement(\n",
    "            cv2.MORPH_RECT, (h_size, 1))  # 形态学因子\n",
    "\n",
    "        h_erode_structure = cv2.getStructuringElement(\n",
    "            cv2.MORPH_RECT, (3, 3))  # 形态学因子\n",
    "        #h_dilate_imgT = cv2.dilate(h_img, h_structure, 1) # 横向膨胀\n",
    "        #h_erode_img = cv2.erode(h_dilate_imgT, h_structure, 1) #腐蚀掉非水平的对象\n",
    "        h_MORPH_CLOSE_img=    cv2.morphologyEx(h_img,cv2.MORPH_CLOSE,h_structure)\n",
    "        h_erode_img = cv2.erode(h_MORPH_CLOSE_img, h_erode_structure, 1) \n",
    "\n",
    "    if len(precolums) > 3:\n",
    "        v_erode_img = maskT\n",
    "    else:\n",
    "        v_img = thresh_img.copy()\n",
    "        vscale = vscale\n",
    "        v_size = int(v_img.shape[0]/vscale)\n",
    "\n",
    "        v_structure = cv2.getStructuringElement(\n",
    "            cv2.MORPH_RECT, (1, v_size))  # 形态学因子\n",
    "        v_erode_structure = cv2.getStructuringElement(\n",
    "            cv2.MORPH_RECT, (3, 3))  # 形态学因子\n",
    "        #v_dilate_imgT = cv2.dilate(v_img, v_dashed_structure, 1) # 虚线转为实线\n",
    "        #v_erode_img = cv2.erode(v_dilate_imgT, v_structure, 1) #腐蚀掉非水平的对象\n",
    "        v_MORPH_CLOSE_img=    cv2.morphologyEx(v_img,cv2.MORPH_CLOSE,v_structure)\n",
    "        v_erode_img = cv2.morphologyEx(v_MORPH_CLOSE_img, cv2.MORPH_CLOSE,v_erode_structure)\n",
    "        #v_erode_img=    cv2.erode(v_MORPH_CLOSE_img,v_erode_structure)\n",
    "    if debug:\n",
    "        plt.gcf().set_size_inches(40.0,40.0)\n",
    "        plt.subplot(3,1,1),plt.imshow(thresh_img,'gray')\n",
    "        plt.subplot(3,1,2),plt.imshow(h_erode_img,'gray')\n",
    "        plt.subplot(3,1,3),plt.imshow(v_erode_img,'gray')\n",
    "        plt.show()\n",
    "\n",
    "\n",
    "\n",
    "   \n",
    "    print('7：计算行和列分割线')\n",
    "    dt = detectTable(tableImgNoborder)\n",
    "    h_threshold = int(tableImgNoborder.shape[1]/5)\n",
    "    v_threshold = int(tableImgNoborder.shape[0]/5)\n",
    "\n",
    "    x_count,x_segmentation = dt.verticalShadowSplite(v_erode_img,v_threshold)  #垂直投影\n",
    "    y_count,y_segmentation = dt.horizontalShadowSplite(h_erode_img,h_threshold)  #水平投影\n",
    "\n",
    "    rows=dt.getLineCor(tableImgNoborder.shape[0],y_segmentation, False if len(prerows) > 3 else True)   #至少5行\n",
    "    colums=dt.getLineCor(tableImgNoborder.shape[1],x_segmentation, False if len(precolums) > 3 else True)     #至少4列\n",
    "    if len(prerows) <= 3 and len(rows) > 2:\n",
    "        rows[0]=0\n",
    "        rows[-1]=tableImgNoborder.shape[1]\n",
    "    if len(precolums) <= 3 and len(colums) > 2:\n",
    "        colums[0]=0\n",
    "        colums[-1]=tableImgNoborder.shape[1]\n",
    "    if tableImgNoborder.shape[0] - rows[-1] >20:\n",
    "        rows.append(tableImgNoborder.shape[0]-1)\n",
    "    if tableImgNoborder.shape[1] - colums[-1] >20:    \n",
    "        colums.append(tableImgNoborder.shape[1]-1)\n",
    "    print(len(rows),len(colums))\n",
    "    print('rows=',rows)\n",
    "    print('colums=',colums)\n",
    "    if debug:\n",
    "        emptyImagev=dt.getShadowimg(tableImgNoborder,x_count,'V')\n",
    "        emptyImageh=dt.getShadowimg(tableImgNoborder,y_count,'H')\n",
    "        white = (255, 255, 255)\n",
    "        black = (0, 0, 0)\n",
    "        h,w=thresh_img.shape\n",
    "        emptyImage = tableImgNoborder.copy()\n",
    "        for x in colums:\n",
    "            cv2.line(emptyImage, (x, 0), (x, h), black)\n",
    "        for y in rows:\n",
    "\n",
    "            cv2.line(emptyImage, (0, y), (w, y), black)\n",
    "        cv2.imwrite('test.jpg',emptyImage)\n",
    "        plt.gcf().set_size_inches(80.0,60.0)\n",
    "        plt.subplot(3,1,1),plt.imshow(emptyImagev,'gray')\n",
    "        plt.subplot(3,1,2),plt.imshow(emptyImageh,'gray')\n",
    "        plt.subplot(3,1,3),plt.imshow(emptyImage,'gray')\n",
    "        plt.show()\n",
    "    \n",
    "    print('8：每个cell进行识别的tablelist') \n",
    "    savename,extension = os.path.splitext(filename)\n",
    "    tempoutpath=os.path.join(path,tempout)\n",
    "    if not os.path.exists(tempoutpath):\n",
    "        os.makedirs(tempoutpath)\n",
    "    savepath = os.path.join(tempoutpath,savename+'.xlsx')      \n",
    "    \n",
    "\n",
    "    tablelist = imgtotable(tableImgNoborder,rows,colums,debug)\n",
    "    print('9：保存文件')       \n",
    "\n",
    "\n",
    "    df=pd.DataFrame(tablelist)\n",
    "\n",
    "    if not os.path.exists(tempoutpath):\n",
    "        os.makedirs(tempoutpath)\n",
    "    savepath = os.path.join(tempoutpath,savename+'.xlsx')\n",
    "    writer = pd.ExcelWriter(savepath)\n",
    "    df.to_excel(writer, sheet_name=savename)\n",
    "    writer.save()\n",
    "    writer.close()\n",
    "    print('10：{}.jpg '.format(savename))\n",
    "    \n",
    "    return tablelist\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "path = 'I:/陈宁/对账单2/11/1'\n",
    "filename=\"1.jpg\"\n",
    "ocrimgtoexcel(filename,path,debug=True)\n",
    "print('ok')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "处理 I:/陈宁/对账单2/17 目录下图片\n",
      "---- 17 南京银行 5904_页面_01.jpg is start---\n",
      "1：读取文件17 南京银行 5904_页面_01.jpg\n",
      "图像h=2338 w=1653\n",
      "2：去除椭圆印章\n",
      "3：检测水平线和角度\n",
      "omit_on_rot_thresh:  0.3141592653589793\n",
      "-----方向r 校正角度 0.0\n",
      "3：水平校正\n",
      "(2338, 1653)\n",
      "4：检测表格上下横线\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "5：计算表格上下线坐标\n",
      "0 0\n",
      "[0, 1653]\n",
      "左上角x1=1 y1=1,右下角x2=1652 y2=2337\n",
      "6：分割前预处理\n",
      "(2336, 1651) (2336, 1651)\n",
      "165\n",
      "7：计算行和列分割线\n",
      "53 6\n",
      "rows= [0, 338, 391, 431, 481, 544, 597, 631, 665, 699, 732, 766, 799, 832, 865, 899, 932, 966, 1000, 1033, 1067, 1101, 1134, 1168, 1201, 1235, 1268, 1302, 1335, 1368, 1402, 1436, 1469, 1503, 1538, 1571, 1605, 1639, 1673, 1707, 1740, 1774, 1808, 1842, 1876, 1910, 1943, 1978, 2009, 2045, 2079, 1651, 2335]\n",
      "colums= [0, 410, 567, 759, 1011, 1651]\n",
      "8：每个cell进行识别的tablelist\n",
      "行0： 列0： 列1： 列2： 列3： 列4：  \n",
      "行1： 列0： 列1： 列2： 列3： 列4：  \n",
      "行2： 列0： 列1： 列2： 列3： 列4：  \n",
      "行3： 列0： 列1： 列2： 列3： 列4：  \n",
      "行4： 列0： 列1： 列2： 列3： 列4：  \n",
      "行5： 列0： 列1： 列2： 列3： 列4：  \n",
      "行6： 列0： 列1： 列2： 列3： 列4：  \n",
      "行7： 列0： 列1： 列2： 列3： 列4：  \n",
      "行8： 列0： 列1： 列2： 列3： 列4：  \n",
      "行9： 列0： 列1： 列2： 列3： 列4：  \n",
      "行10： 列0： 列1： 列2： 列3： 列4：  \n",
      "行11： 列0： 列1： 列2： 列3： 列4：  \n",
      "行12： 列0： 列1： 列2： 列3： 列4：  \n",
      "行13： 列0： 列1： 列2： 列3： 列4：  \n",
      "行14： 列0： 列1： 列2： 列3： 列4：  \n",
      "行15： 列0： 列1： 列2： 列3： 列4：  \n",
      "行16： 列0： 列1： 列2： 列3： 列4：  \n",
      "行17： 列0： 列1： 列2： 列3： 列4：  \n",
      "行18： 列0： 列1： 列2： 列3： 列4：  \n",
      "行19： 列0： 列1： 列2： 列3： 列4：  \n",
      "行20： 列0： 列1： 列2： 列3： 列4：  \n",
      "行21： 列0： 列1： 列2： 列3： 列4：  \n",
      "行22： 列0： 列1： 列2： 列3： 列4：  \n",
      "行23： 列0： 列1： 列2： 列3： 列4：  \n",
      "行24： 列0： 列1： 列2： 列3： 列4：  \n",
      "行25： 列0： 列1： 列2： 列3： 列4：  \n",
      "行26： 列0： 列1： 列2： 列3： 列4：  \n",
      "行27： 列0： 列1： 列2： 列3： 列4：  \n",
      "行28： 列0： 列1： 列2： 列3： 列4：  \n",
      "行29： 列0： 列1： 列2： 列3： 列4：  \n",
      "行30： 列0： 列1： 列2： 列3： 列4：  \n",
      "行31： 列0： 列1： 列2： 列3： 列4：  \n",
      "行32： 列0： 列1： 列2： 列3： 列4：  \n",
      "行33： 列0： 列1： 列2： 列3： 列4：  \n",
      "行34： 列0： 列1： 列2： 列3： 列4：  \n",
      "行35： 列0： 列1： 列2： 列3： 列4：  \n",
      "行36： 列0： 列1： 列2： 列3： 列4：  \n",
      "行37： 列0： 列1： 列2： 列3： 列4：  \n",
      "行38： 列0： 列1： 列2： 列3： 列4：  \n",
      "行39： 列0： 列1： 列2： 列3： 列4：  \n",
      "行40： 列0： 列1： 列2： 列3： 列4：  \n",
      "行41： 列0： 列1： 列2： 列3： 列4：  \n",
      "行42： 列0： 列1： 列2： 列3： 列4：  \n",
      "行43： 列0： 列1： 列2： 列3： 列4：  \n",
      "行44： 列0： 列1： 列2： 列3： 列4：  \n",
      "行45： 列0： 列1： 列2： 列3： 列4：  \n",
      "行46： 列0： 列1： 列2： 列3： 列4：  \n",
      "行47： 列0： 列1： 列2： 列3： 列4：  \n",
      "行48： 列0： 列1： 列2： 列3： 列4：  \n",
      "行49： 列0： 列1： 列2： 列3： 列4：  \n",
      "行50： 列0： RECT:[2079:0,1651:410]\n",
      "列1： RECT:[2079:410,1651:567]\n",
      "列2： RECT:[2079:567,1651:759]\n",
      "列3： RECT:[2079:759,1651:1011]\n",
      "列4： RECT:[2079:1011,1651:1651]\n",
      " \n",
      "行51： 列0： 列1： 列2： 列3： 列4：  \n",
      "9：保存文件\n",
      "10：17 南京银行 5904_页面_01.jpg \n",
      "----17 南京银行 5904_页面_01.jpg is complete--- \n",
      "---- 17 南京银行 5904_页面_02.jpg is start---\n",
      "1：读取文件17 南京银行 5904_页面_02.jpg\n",
      "图像h=2338 w=1653\n",
      "2：去除椭圆印章\n",
      "3：检测水平线和角度\n",
      "omit_on_rot_thresh:  0.3141592653589793\n",
      "-----方向r 校正角度 0.0\n",
      "3：水平校正\n",
      "(2338, 1653)\n",
      "4：检测表格上下横线\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "5：计算表格上下线坐标\n",
      "0 2\n",
      "[0, 1653]\n",
      "左上角x1=1 y1=551,右下角x2=1652 y2=647\n",
      "6：分割前预处理\n",
      "(96, 1651) (96, 1651)\n",
      "165\n",
      "7：计算行和列分割线\n",
      "3 42\n",
      "rows= [0, 51, 1651]\n",
      "colums= [0, 193, 204, 230, 252, 266, 284, 318, 328, 340, 362, 404, 426, 446, 456, 474, 492, 516, 539, 559, 582, 624, 643, 649, 659, 748, 852, 874, 903, 915, 922, 931, 946, 958, 1014, 1109, 1116, 1121, 1124, 1134, 1145, 1651]\n",
      "8：每个cell进行识别的tablelist\n",
      "行0： 列0： 列1： RECT:[0:193,51:204]\n",
      "列2： 列3： 列4： RECT:[0:252,51:266]\n",
      "列5： 列6： 列7： RECT:[0:318,51:328]\n",
      "列8： RECT:[0:328,51:340]\n",
      "列9： 列10： 列11： 列12： 列13： RECT:[0:446,51:456]\n",
      "列14： 列15： 列16： 列17： 列18： 列19： 列20： 列21： 列22： RECT:[0:643,51:649]\n",
      "列23： RECT:[0:649,51:659]\n",
      "列24： 列25： 列26： 列27： 列28： RECT:[0:903,51:915]\n",
      "列29： RECT:[0:915,51:922]\n",
      "列30： RECT:[0:922,51:931]\n",
      "列31： 列32： 列33： 列34： 列35： RECT:[0:1109,51:1116]\n",
      "列36： RECT:[0:1116,51:1121]\n",
      "列37： RECT:[0:1121,51:1124]\n",
      "列38： RECT:[0:1124,51:1134]\n",
      "列39： 列40：  \n",
      "行1： 列0： 列1： 列2： 列3： 列4： RECT:[51:252,1651:266]\n",
      "列5： 列6： 列7： 列8： RECT:[51:328,1651:340]\n",
      "列9： 列10： 列11： 列12： 列13： RECT:[51:446,1651:456]\n",
      "列14： 列15： 列16： 列17： 列18： 列19： 列20： 列21： 列22： RECT:[51:643,1651:649]\n",
      "列23： RECT:[51:649,1651:659]\n",
      "列24： 列25： 列26： 列27： 列28： RECT:[51:903,1651:915]\n",
      "列29： RECT:[51:915,1651:922]\n",
      "列30： RECT:[51:922,1651:931]\n",
      "列31： 列32： RECT:[51:946,1651:958]\n",
      "列33： 列34： 列35： RECT:[51:1109,1651:1116]\n",
      "列36： RECT:[51:1116,1651:1121]\n",
      "列37： RECT:[51:1121,1651:1124]\n",
      "列38： RECT:[51:1124,1651:1134]\n",
      "列39： RECT:[51:1134,1651:1145]\n",
      "列40：  \n",
      "9：保存文件\n",
      "10：17 南京银行 5904_页面_02.jpg \n",
      "----17 南京银行 5904_页面_02.jpg is complete--- \n",
      "---- 17 南京银行 5904_页面_03.jpg is start---\n",
      "1：读取文件17 南京银行 5904_页面_03.jpg\n",
      "图像h=2338 w=1653\n",
      "2：去除椭圆印章\n",
      "3：检测水平线和角度\n",
      "omit_on_rot_thresh:  0.3141592653589793\n",
      "4.371139006309477e-08 None False False\n",
      "-----方向sx 校正角度 0.0\n",
      "3：水平校正\n",
      "(2338, 1653)\n",
      "4：检测表格上下横线\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "5：计算表格上下线坐标\n",
      "0 4\n",
      "[0, 1653]\n",
      "左上角x1=1 y1=553,右下角x2=1652 y2=1823\n",
      "6：分割前预处理\n",
      "(1270, 1651) (1270, 1651)\n",
      "7：计算行和列分割线\n",
      "3 9\n",
      "rows= [501, 1067, 1269]\n",
      "colums= [0, 281, 420, 579, 765, 1018, 1260, 1355, 1651]\n",
      "8：每个cell进行识别的tablelist\n",
      "行0： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7：  \n",
      "行1： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7：  \n",
      "9：保存文件\n",
      "10：17 南京银行 5904_页面_03.jpg \n",
      "----17 南京银行 5904_页面_03.jpg is complete--- \n",
      "---- 17 南京银行 5904_页面_04.jpg is start---\n",
      "1：读取文件17 南京银行 5904_页面_04.jpg\n",
      "图像h=2338 w=1653\n",
      "2：去除椭圆印章\n",
      "3：检测水平线和角度\n",
      "omit_on_rot_thresh:  0.3141592653589793\n",
      "4.371139006309477e-08 None False False\n",
      "-----方向sx 校正角度 0.0\n",
      "3：水平校正\n",
      "(2338, 1653)\n",
      "4：检测表格上下横线\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "5：计算表格上下线坐标\n",
      "0 5\n",
      "[0, 1653]\n",
      "左上角x1=1 y1=551,右下角x2=1652 y2=1693\n",
      "6：分割前预处理\n",
      "(1142, 1651) (1142, 1651)\n",
      "7：计算行和列分割线\n",
      "4 15\n",
      "rows= [1, 99, 101, 1141]\n",
      "colums= [0, 275, 394, 419, 572, 761, 1051, 1208, 1273, 1289, 1293, 1322, 1351, 1393, 1651]\n",
      "8：每个cell进行识别的tablelist\n",
      "行0： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9： RECT:[1:1289,99:1293]\n",
      "列10： 列11： 列12： 列13：  \n",
      "行1： 列0： RECT:[99:0,101:275]\n",
      "列1： RECT:[99:275,101:394]\n",
      "列2： RECT:[99:394,101:419]\n",
      "列3： RECT:[99:419,101:572]\n",
      "列4： RECT:[99:572,101:761]\n",
      "列5： 列6： 列7： 列8： 列9： RECT:[99:1289,101:1293]\n",
      "列10： RECT:[99:1293,101:1322]\n",
      "列11： RECT:[99:1322,101:1351]\n",
      "列12： RECT:[99:1351,101:1393]\n",
      "列13： RECT:[99:1393,101:1651]\n",
      " \n",
      "行2： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9： RECT:[101:1289,1141:1293]\n",
      "列10： 列11： 列12： 列13：  \n",
      "9：保存文件\n",
      "10：17 南京银行 5904_页面_04.jpg \n",
      "----17 南京银行 5904_页面_04.jpg is complete--- \n",
      "---- 17 南京银行 5904_页面_05.jpg is start---\n",
      "1：读取文件17 南京银行 5904_页面_05.jpg\n",
      "图像h=2338 w=1653\n",
      "2：去除椭圆印章\n",
      "3：检测水平线和角度\n",
      "omit_on_rot_thresh:  0.3141592653589793\n",
      "-----方向r 校正角度 0.0\n",
      "3：水平校正\n",
      "(2338, 1653)\n",
      "4：检测表格上下横线\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "5：计算表格上下线坐标\n",
      "0 2\n",
      "[0, 1653]\n",
      "左上角x1=1 y1=553,右下角x2=1652 y2=2133\n",
      "6：分割前预处理\n",
      "(1580, 1651) (1580, 1651)\n",
      "165\n",
      "7：计算行和列分割线\n",
      "47 13\n",
      "rows= [0, 50, 83, 117, 150, 183, 217, 251, 284, 317, 351, 385, 419, 452, 486, 519, 552, 586, 619, 653, 687, 720, 754, 788, 821, 855, 888, 922, 956, 990, 1024, 1058, 1091, 1125, 1159, 1192, 1226, 1260, 1294, 1328, 1362, 1396, 1430, 1464, 1497, 1531, 1651]\n",
      "colums= [0, 277, 415, 572, 763, 974, 990, 1001, 1012, 1030, 1050, 1256, 1651]\n",
      "8：每个cell进行识别的tablelist\n",
      "行0： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[0:990,50:1001]\n",
      "列7： RECT:[0:1001,50:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行1： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[50:990,83:1001]\n",
      "列7： RECT:[50:1001,83:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行2： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[83:990,117:1001]\n",
      "列7： RECT:[83:1001,117:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行3： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[117:990,150:1001]\n",
      "列7： RECT:[117:1001,150:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行4： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[150:990,183:1001]\n",
      "列7： RECT:[150:1001,183:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行5： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[183:990,217:1001]\n",
      "列7： RECT:[183:1001,217:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行6： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[217:990,251:1001]\n",
      "列7： RECT:[217:1001,251:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行7： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[251:990,284:1001]\n",
      "列7： RECT:[251:1001,284:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行8： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[284:990,317:1001]\n",
      "列7： RECT:[284:1001,317:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行9： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[317:990,351:1001]\n",
      "列7： RECT:[317:1001,351:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行10： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[351:990,385:1001]\n",
      "列7： RECT:[351:1001,385:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行11： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[385:990,419:1001]\n",
      "列7： RECT:[385:1001,419:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行12： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[419:990,452:1001]\n",
      "列7： RECT:[419:1001,452:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行13： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[452:990,486:1001]\n",
      "列7： RECT:[452:1001,486:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行14： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[486:990,519:1001]\n",
      "列7： RECT:[486:1001,519:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行15： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[519:990,552:1001]\n",
      "列7： RECT:[519:1001,552:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行16： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[552:990,586:1001]\n",
      "列7： RECT:[552:1001,586:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行17： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[586:990,619:1001]\n",
      "列7： RECT:[586:1001,619:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行18： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[619:990,653:1001]\n",
      "列7： RECT:[619:1001,653:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行19： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[653:990,687:1001]\n",
      "列7： RECT:[653:1001,687:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行20： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[687:990,720:1001]\n",
      "列7： RECT:[687:1001,720:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行21： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[720:990,754:1001]\n",
      "列7： RECT:[720:1001,754:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行22： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[754:990,788:1001]\n",
      "列7： RECT:[754:1001,788:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行23： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[788:990,821:1001]\n",
      "列7： RECT:[788:1001,821:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行24： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[821:990,855:1001]\n",
      "列7： 列8： 列9： 列10： 列11：  \n",
      "行25： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[855:990,888:1001]\n",
      "列7： RECT:[855:1001,888:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行26： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[888:990,922:1001]\n",
      "列7： RECT:[888:1001,922:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行27： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[922:990,956:1001]\n",
      "列7： RECT:[922:1001,956:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行28： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[956:990,990:1001]\n",
      "列7： RECT:[956:1001,990:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行29： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： RECT:[990:1001,1024:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行30： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1024:990,1058:1001]\n",
      "列7： RECT:[1024:1001,1058:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行31： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1058:990,1091:1001]\n",
      "列7： RECT:[1058:1001,1091:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行32： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1091:990,1125:1001]\n",
      "列7： RECT:[1091:1001,1125:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行33： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1125:990,1159:1001]\n",
      "列7： RECT:[1125:1001,1159:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行34： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1159:990,1192:1001]\n",
      "列7： RECT:[1159:1001,1192:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行35： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1192:990,1226:1001]\n",
      "列7： RECT:[1192:1001,1226:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行36： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1226:990,1260:1001]\n",
      "列7： RECT:[1226:1001,1260:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行37： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1260:990,1294:1001]\n",
      "列7： RECT:[1260:1001,1294:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行38： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1294:990,1328:1001]\n",
      "列7： RECT:[1294:1001,1328:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行39： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1328:990,1362:1001]\n",
      "列7： RECT:[1328:1001,1362:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行40： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1362:990,1396:1001]\n",
      "列7： RECT:[1362:1001,1396:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行41： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1396:990,1430:1001]\n",
      "列7： RECT:[1396:1001,1430:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行42： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1430:990,1464:1001]\n",
      "列7： RECT:[1430:1001,1464:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行43： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1464:990,1497:1001]\n",
      "列7： RECT:[1464:1001,1497:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行44： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1497:990,1531:1001]\n",
      "列7： RECT:[1497:1001,1531:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "行45： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1531:990,1651:1001]\n",
      "列7： RECT:[1531:1001,1651:1012]\n",
      "列8： 列9： 列10： 列11：  \n",
      "9：保存文件\n",
      "10：17 南京银行 5904_页面_05.jpg \n",
      "----17 南京银行 5904_页面_05.jpg is complete--- \n",
      "---- 17 南京银行 5904_页面_06.jpg is start---\n",
      "1：读取文件17 南京银行 5904_页面_06.jpg\n",
      "图像h=2338 w=1653\n",
      "2：去除椭圆印章\n",
      "3：检测水平线和角度\n",
      "omit_on_rot_thresh:  0.3141592653589793\n",
      "4.371139006309477e-08 None False False\n",
      "-----方向sx 校正角度 0.0\n",
      "3：水平校正\n",
      "(2338, 1653)\n",
      "4：检测表格上下横线\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "5：计算表格上下线坐标\n",
      "0 2\n",
      "[0, 1653]\n",
      "左上角x1=1 y1=555,右下角x2=1652 y2=1190\n",
      "6：分割前预处理\n",
      "(635, 1651) (635, 1651)\n",
      "165\n",
      "7：计算行和列分割线\n",
      "19 14\n",
      "rows= [0, 51, 84, 117, 151, 184, 218, 252, 285, 319, 352, 386, 419, 453, 486, 520, 554, 587, 1651]\n",
      "colums= [0, 286, 423, 520, 579, 678, 686, 770, 1019, 1222, 1233, 1240, 1251, 1651]\n",
      "8：每个cell进行识别的tablelist\n",
      "行0： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[0:678,51:686]\n",
      "列6： 列7： 列8： 列9： RECT:[0:1222,51:1233]\n",
      "列10： RECT:[0:1233,51:1240]\n",
      "列11： RECT:[0:1240,51:1251]\n",
      "列12：  \n",
      "行1： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[51:678,84:686]\n",
      "列6： 列7： 列8： 列9： RECT:[51:1222,84:1233]\n",
      "列10： RECT:[51:1233,84:1240]\n",
      "列11： RECT:[51:1240,84:1251]\n",
      "列12：  \n",
      "行2： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[84:678,117:686]\n",
      "列6： 列7： 列8： 列9： RECT:[84:1222,117:1233]\n",
      "列10： RECT:[84:1233,117:1240]\n",
      "列11： RECT:[84:1240,117:1251]\n",
      "列12：  \n",
      "行3： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[117:678,151:686]\n",
      "列6： 列7： 列8： 列9： RECT:[117:1222,151:1233]\n",
      "列10： RECT:[117:1233,151:1240]\n",
      "列11： RECT:[117:1240,151:1251]\n",
      "列12：  \n",
      "行4： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[151:678,184:686]\n",
      "列6： 列7： 列8： 列9： RECT:[151:1222,184:1233]\n",
      "列10： RECT:[151:1233,184:1240]\n",
      "列11： RECT:[151:1240,184:1251]\n",
      "列12：  \n",
      "行5： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[184:678,218:686]\n",
      "列6： 列7： 列8： 列9： 列10： RECT:[184:1233,218:1240]\n",
      "列11： RECT:[184:1240,218:1251]\n",
      "列12：  \n",
      "行6： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[218:678,252:686]\n",
      "列6： 列7： 列8： 列9： 列10： 列11： 列12：  \n",
      "行7： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[252:678,285:686]\n",
      "列6： 列7： 列8： 列9： RECT:[252:1222,285:1233]\n",
      "列10： RECT:[252:1233,285:1240]\n",
      "列11： RECT:[252:1240,285:1251]\n",
      "列12：  \n",
      "行8： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[285:678,319:686]\n",
      "列6： 列7： 列8： 列9： RECT:[285:1222,319:1233]\n",
      "列10： RECT:[285:1233,319:1240]\n",
      "列11： RECT:[285:1240,319:1251]\n",
      "列12：  \n",
      "行9： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[319:678,352:686]\n",
      "列6： 列7： 列8： 列9： RECT:[319:1222,352:1233]\n",
      "列10： RECT:[319:1233,352:1240]\n",
      "列11： RECT:[319:1240,352:1251]\n",
      "列12：  \n",
      "行10： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9： 列10： 列11： 列12：  \n",
      "行11： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[386:678,419:686]\n",
      "列6： 列7： 列8： 列9： RECT:[386:1222,419:1233]\n",
      "列10： RECT:[386:1233,419:1240]\n",
      "列11： RECT:[386:1240,419:1251]\n",
      "列12：  \n",
      "行12： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[419:678,453:686]\n",
      "列6： 列7： 列8： 列9： RECT:[419:1222,453:1233]\n",
      "列10： RECT:[419:1233,453:1240]\n",
      "列11： RECT:[419:1240,453:1251]\n",
      "列12：  \n",
      "行13： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[453:678,486:686]\n",
      "列6： 列7： 列8： 列9： RECT:[453:1222,486:1233]\n",
      "列10： RECT:[453:1233,486:1240]\n",
      "列11： RECT:[453:1240,486:1251]\n",
      "列12：  \n",
      "行14： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[486:678,520:686]\n",
      "列6： 列7： 列8： 列9： 列10： RECT:[486:1233,520:1240]\n",
      "列11： RECT:[486:1240,520:1251]\n",
      "列12：  \n",
      "行15： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9： 列10： 列11： 列12：  \n",
      "行16： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[554:678,587:686]\n",
      "列6： 列7： 列8： 列9： 列10： RECT:[554:1233,587:1240]\n",
      "列11： RECT:[554:1240,587:1251]\n",
      "列12：  \n",
      "行17： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[587:678,1651:686]\n",
      "列6： 列7： 列8： 列9： RECT:[587:1222,1651:1233]\n",
      "列10： RECT:[587:1233,1651:1240]\n",
      "列11： RECT:[587:1240,1651:1251]\n",
      "列12：  \n",
      "9：保存文件\n",
      "10：17 南京银行 5904_页面_06.jpg \n",
      "----17 南京银行 5904_页面_06.jpg is complete--- \n",
      "---- 17 南京银行 5904_页面_07.jpg is start---\n",
      "1：读取文件17 南京银行 5904_页面_07.jpg\n",
      "图像h=2338 w=1653\n",
      "2：去除椭圆印章\n",
      "3：检测水平线和角度\n",
      "omit_on_rot_thresh:  0.3141592653589793\n",
      "-----方向r 校正角度 0.0\n",
      "3：水平校正\n",
      "(2338, 1653)\n",
      "4：检测表格上下横线\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "5：计算表格上下线坐标\n",
      "0 1\n",
      "[0, 1653]\n",
      "左上角x1=1 y1=1,右下角x2=1652 y2=2337\n",
      "6：分割前预处理\n",
      "(2336, 1651) (2336, 1651)\n",
      "165\n",
      "7：计算行和列分割线\n",
      "32 7\n",
      "rows= [0, 360, 437, 480, 504, 553, 605, 639, 672, 705, 739, 772, 806, 839, 873, 907, 940, 974, 1008, 1041, 1074, 1108, 1141, 1175, 1209, 1243, 1276, 1309, 1343, 1376, 1651, 2335]\n",
      "colums= [0, 281, 419, 516, 576, 765, 1651]\n",
      "8：每个cell进行识别的tablelist\n",
      "行0： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行1： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行2： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行3： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行4： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行5： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行6： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行7： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行8： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行9： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行10： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行11： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行12： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行13： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行14： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行15： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行16： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行17： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行18： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行19： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行20： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行21： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行22： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行23： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行24： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行25： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行26： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行27： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行28： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行29： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行30： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "9：保存文件\n",
      "10：17 南京银行 5904_页面_07.jpg \n",
      "----17 南京银行 5904_页面_07.jpg is complete--- \n",
      "---- 17 南京银行 5904_页面_08.jpg is start---\n",
      "1：读取文件17 南京银行 5904_页面_08.jpg\n",
      "图像h=2338 w=1653\n",
      "2：去除椭圆印章\n",
      "3：检测水平线和角度\n",
      "omit_on_rot_thresh:  0.3141592653589793\n",
      "-----方向r 校正角度 0.0\n",
      "3：水平校正\n",
      "(2338, 1653)\n",
      "4：检测表格上下横线\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "5：计算表格上下线坐标\n",
      "0 2\n",
      "[0, 1653]\n",
      "左上角x1=1 y1=555,右下角x2=1652 y2=2135\n",
      "6：分割前预处理\n",
      "(1580, 1651) (1580, 1651)\n",
      "165\n",
      "7：计算行和列分割线\n",
      "47 7\n",
      "rows= [0, 50, 84, 117, 151, 185, 218, 251, 284, 318, 351, 385, 419, 453, 486, 520, 553, 587, 620, 653, 687, 720, 754, 788, 822, 855, 889, 922, 956, 990, 1024, 1057, 1092, 1126, 1159, 1193, 1227, 1261, 1294, 1328, 1362, 1397, 1430, 1464, 1498, 1532, 1651]\n",
      "colums= [0, 282, 420, 577, 768, 1018, 1651]\n",
      "8：每个cell进行识别的tablelist\n",
      "行0： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行1： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行2： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行3： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行4： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行5： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行6： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行7： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行8： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行9： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行10： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行11： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行12： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行13： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行14： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行15： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行16： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行17： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行18： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行19： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行20： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行21： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行22： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行23： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行24： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行25： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行26： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行27： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行28： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行29： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行30： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行31： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行32： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行33： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行34： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行35： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行36： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行37： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行38： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行39： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行40： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行41： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行42： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行43： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行44： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行45： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "9：保存文件\n",
      "10：17 南京银行 5904_页面_08.jpg \n",
      "----17 南京银行 5904_页面_08.jpg is complete--- \n",
      "---- 17 南京银行 5904_页面_09.jpg is start---\n",
      "1：读取文件17 南京银行 5904_页面_09.jpg\n",
      "图像h=2338 w=1653\n",
      "2：去除椭圆印章\n",
      "3：检测水平线和角度\n",
      "omit_on_rot_thresh:  0.3141592653589793\n",
      "-----方向r 校正角度 0.0\n",
      "3：水平校正\n",
      "(2338, 1653)\n",
      "4：检测表格上下横线\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "5：计算表格上下线坐标\n",
      "0 2\n",
      "[0, 1653]\n",
      "左上角x1=1 y1=556,右下角x2=1652 y2=959\n",
      "6：分割前预处理\n",
      "(403, 1651) (403, 1651)\n",
      "165\n",
      "7：计算行和列分割线\n",
      "12 11\n",
      "rows= [0, 51, 84, 118, 152, 186, 219, 253, 286, 320, 353, 1651]\n",
      "colums= [0, 283, 355, 415, 510, 571, 663, 687, 761, 1019, 1651]\n",
      "8：每个cell进行识别的tablelist\n",
      "行0： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行1： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行2： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行3： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行4： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行5： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行6： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行7： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行8： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行9： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行10： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "9：保存文件\n",
      "10：17 南京银行 5904_页面_09.jpg \n",
      "----17 南京银行 5904_页面_09.jpg is complete--- \n",
      "---- 17 南京银行 5904_页面_10.jpg is start---\n",
      "1：读取文件17 南京银行 5904_页面_10.jpg\n",
      "图像h=2338 w=1653\n",
      "2：去除椭圆印章\n",
      "3：检测水平线和角度\n",
      "omit_on_rot_thresh:  0.3141592653589793\n",
      "4.371139006309477e-08 None False False\n",
      "-----方向sx 校正角度 0.0\n",
      "3：水平校正\n",
      "(2338, 1653)\n",
      "4：检测表格上下横线\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "5：计算表格上下线坐标\n",
      "0 3\n",
      "[0, 1653]\n",
      "左上角x1=1 y1=557,右下角x2=1652 y2=2137\n",
      "6：分割前预处理\n",
      "(1580, 1651) (1580, 1651)\n",
      "165\n",
      "7：计算行和列分割线\n",
      "47 7\n",
      "rows= [0, 51, 84, 117, 151, 184, 218, 251, 285, 319, 352, 386, 419, 452, 486, 519, 554, 586, 621, 654, 688, 721, 755, 788, 823, 855, 889, 923, 957, 991, 1024, 1058, 1092, 1126, 1159, 1193, 1227, 1261, 1295, 1329, 1363, 1397, 1431, 1464, 1498, 1532, 1651]\n",
      "colums= [0, 284, 421, 578, 768, 1020, 1651]\n",
      "8：每个cell进行识别的tablelist\n",
      "行0： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行1： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行2： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行3： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行4： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行5： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行6： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行7： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行8： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行9： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行10： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行11： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行12： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行13： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行14： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行15： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行16： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行17： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行18： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行19： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行20： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行21： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行22： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行23： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行24： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行25： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行26： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行27： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行28： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行29： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行30： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行31： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行32： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行33： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行34： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行35： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行36： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行37： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行38： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行39： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行40： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行41： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行42： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行43： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行44： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行45： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "9：保存文件\n",
      "10：17 南京银行 5904_页面_10.jpg \n",
      "----17 南京银行 5904_页面_10.jpg is complete--- \n",
      "---- 17 南京银行 5904_页面_11.jpg is start---\n",
      "1：读取文件17 南京银行 5904_页面_11.jpg\n",
      "图像h=2338 w=1653\n",
      "2：去除椭圆印章\n",
      "3：检测水平线和角度\n",
      "omit_on_rot_thresh:  0.3141592653589793\n",
      "-----方向r 校正角度 0.0\n",
      "3：水平校正\n",
      "(2338, 1653)\n",
      "4：检测表格上下横线\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "5：计算表格上下线坐标\n",
      "0 2\n",
      "[0, 1653]\n",
      "左上角x1=1 y1=556,右下角x2=1652 y2=2136\n",
      "6：分割前预处理\n",
      "(1580, 1651) (1580, 1651)\n",
      "165\n",
      "7：计算行和列分割线\n",
      "47 9\n",
      "rows= [0, 51, 84, 118, 151, 185, 219, 252, 286, 319, 353, 386, 420, 453, 487, 520, 553, 587, 620, 654, 687, 721, 755, 789, 823, 856, 890, 923, 957, 990, 1024, 1058, 1092, 1126, 1160, 1193, 1228, 1262, 1296, 1329, 1364, 1397, 1431, 1465, 1499, 1532, 1651]\n",
      "colums= [0, 282, 419, 576, 769, 979, 1040, 1051, 1651]\n",
      "8：每个cell进行识别的tablelist\n",
      "行0： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[0:1040,51:1051]\n",
      "列7：  \n",
      "行1： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[51:1040,84:1051]\n",
      "列7：  \n",
      "行2： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[84:1040,118:1051]\n",
      "列7：  \n",
      "行3： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[118:1040,151:1051]\n",
      "列7：  \n",
      "行4： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[151:1040,185:1051]\n",
      "列7：  \n",
      "行5： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[185:1040,219:1051]\n",
      "列7：  \n",
      "行6： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[219:1040,252:1051]\n",
      "列7：  \n",
      "行7： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[252:1040,286:1051]\n",
      "列7：  \n",
      "行8： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[286:1040,319:1051]\n",
      "列7：  \n",
      "行9： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[319:1040,353:1051]\n",
      "列7：  \n",
      "行10： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[353:1040,386:1051]\n",
      "列7：  \n",
      "行11： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[386:1040,420:1051]\n",
      "列7：  \n",
      "行12： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[420:1040,453:1051]\n",
      "列7：  \n",
      "行13： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[453:1040,487:1051]\n",
      "列7：  \n",
      "行14： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[487:1040,520:1051]\n",
      "列7：  \n",
      "行15： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[520:1040,553:1051]\n",
      "列7：  \n",
      "行16： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7：  \n",
      "行17： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[587:1040,620:1051]\n",
      "列7：  \n",
      "行18： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7：  \n",
      "行19： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[654:1040,687:1051]\n",
      "列7：  \n",
      "行20： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[687:1040,721:1051]\n",
      "列7：  \n",
      "行21： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[721:1040,755:1051]\n",
      "列7：  \n",
      "行22： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7：  \n",
      "行23： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[789:1040,823:1051]\n",
      "列7：  \n",
      "行24： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7：  \n",
      "行25： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[856:1040,890:1051]\n",
      "列7：  \n",
      "行26： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7：  \n",
      "行27： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[923:1040,957:1051]\n",
      "列7：  \n",
      "行28： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7：  \n",
      "行29： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7：  \n",
      "行30： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1024:1040,1058:1051]\n",
      "列7：  \n",
      "行31： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1058:1040,1092:1051]\n",
      "列7：  \n",
      "行32： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1092:1040,1126:1051]\n",
      "列7：  \n",
      "行33： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1126:1040,1160:1051]\n",
      "列7：  \n",
      "行34： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1160:1040,1193:1051]\n",
      "列7：  \n",
      "行35： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1193:1040,1228:1051]\n",
      "列7：  \n",
      "行36： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1228:1040,1262:1051]\n",
      "列7：  \n",
      "行37： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1262:1040,1296:1051]\n",
      "列7：  \n",
      "行38： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1296:1040,1329:1051]\n",
      "列7：  \n",
      "行39： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1329:1040,1364:1051]\n",
      "列7：  \n",
      "行40： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1364:1040,1397:1051]\n",
      "列7：  \n",
      "行41： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1397:1040,1431:1051]\n",
      "列7：  \n",
      "行42： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1431:1040,1465:1051]\n",
      "列7：  \n",
      "行43： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1465:1040,1499:1051]\n",
      "列7：  \n",
      "行44： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1499:1040,1532:1051]\n",
      "列7：  \n",
      "行45： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[1532:1040,1651:1051]\n",
      "列7：  \n",
      "9：保存文件\n",
      "10：17 南京银行 5904_页面_11.jpg \n",
      "----17 南京银行 5904_页面_11.jpg is complete--- \n",
      "---- 17 南京银行 5904_页面_12.jpg is start---\n",
      "1：读取文件17 南京银行 5904_页面_12.jpg\n",
      "图像h=2338 w=1653\n",
      "2：去除椭圆印章\n",
      "3：检测水平线和角度\n",
      "omit_on_rot_thresh:  0.3141592653589793\n",
      "-----方向r 校正角度 0.0\n",
      "3：水平校正\n",
      "(2338, 1653)\n",
      "4：检测表格上下横线\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "5：计算表格上下线坐标\n",
      "0 2\n",
      "[0, 1653]\n",
      "左上角x1=1 y1=557,右下角x2=1652 y2=1697\n",
      "6：分割前预处理\n",
      "(1140, 1651) (1140, 1651)\n",
      "165\n",
      "7：计算行和列分割线\n",
      "34 13\n",
      "rows= [0, 50, 83, 116, 150, 184, 217, 251, 285, 318, 352, 385, 418, 452, 485, 519, 552, 587, 620, 654, 687, 720, 754, 788, 821, 855, 889, 923, 957, 990, 1023, 1057, 1091, 1651]\n",
      "colums= [0, 279, 415, 573, 763, 971, 977, 990, 1000, 1012, 1026, 1047, 1651]\n",
      "8：每个cell进行识别的tablelist\n",
      "行0： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[0:971,50:977]\n",
      "列6： RECT:[0:977,50:990]\n",
      "列7： RECT:[0:990,50:1000]\n",
      "列8： RECT:[0:1000,50:1012]\n",
      "列9： RECT:[0:1012,50:1026]\n",
      "列10： 列11：  \n",
      "行1： 列0： 列1： 列2： 列3： 列4： 列5： 列6： RECT:[50:977,83:990]\n",
      "列7： RECT:[50:990,83:1000]\n",
      "列8： RECT:[50:1000,83:1012]\n",
      "列9： RECT:[50:1012,83:1026]\n",
      "列10： 列11：  \n",
      "行2： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： RECT:[83:990,116:1000]\n",
      "列8： RECT:[83:1000,116:1012]\n",
      "列9： RECT:[83:1012,116:1026]\n",
      "列10： 列11：  \n",
      "行3： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[116:971,150:977]\n",
      "列6： 列7： 列8： RECT:[116:1000,150:1012]\n",
      "列9： RECT:[116:1012,150:1026]\n",
      "列10： 列11：  \n",
      "行4： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： RECT:[150:1000,184:1012]\n",
      "列9： RECT:[150:1012,184:1026]\n",
      "列10： 列11：  \n",
      "行5： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[184:971,217:977]\n",
      "列6： RECT:[184:977,217:990]\n",
      "列7： RECT:[184:990,217:1000]\n",
      "列8： RECT:[184:1000,217:1012]\n",
      "列9： RECT:[184:1012,217:1026]\n",
      "列10： 列11：  \n",
      "行6： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[217:971,251:977]\n",
      "列6： RECT:[217:977,251:990]\n",
      "列7： RECT:[217:990,251:1000]\n",
      "列8： RECT:[217:1000,251:1012]\n",
      "列9： RECT:[217:1012,251:1026]\n",
      "列10： 列11：  \n",
      "行7： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[251:971,285:977]\n",
      "列6： RECT:[251:977,285:990]\n",
      "列7： RECT:[251:990,285:1000]\n",
      "列8： RECT:[251:1000,285:1012]\n",
      "列9： RECT:[251:1012,285:1026]\n",
      "列10： 列11：  \n",
      "行8： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[285:971,318:977]\n",
      "列6： RECT:[285:977,318:990]\n",
      "列7： RECT:[285:990,318:1000]\n",
      "列8： RECT:[285:1000,318:1012]\n",
      "列9： RECT:[285:1012,318:1026]\n",
      "列10： 列11：  \n",
      "行9： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： RECT:[318:1000,352:1012]\n",
      "列9： RECT:[318:1012,352:1026]\n",
      "列10： 列11：  \n",
      "行10： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[352:971,385:977]\n",
      "列6： RECT:[352:977,385:990]\n",
      "列7： RECT:[352:990,385:1000]\n",
      "列8： RECT:[352:1000,385:1012]\n",
      "列9： RECT:[352:1012,385:1026]\n",
      "列10： 列11：  \n",
      "行11： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[385:971,418:977]\n",
      "列6： RECT:[385:977,418:990]\n",
      "列7： RECT:[385:990,418:1000]\n",
      "列8： RECT:[385:1000,418:1012]\n",
      "列9： RECT:[385:1012,418:1026]\n",
      "列10： 列11：  \n",
      "行12： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[418:971,452:977]\n",
      "列6： RECT:[418:977,452:990]\n",
      "列7： RECT:[418:990,452:1000]\n",
      "列8： RECT:[418:1000,452:1012]\n",
      "列9： RECT:[418:1012,452:1026]\n",
      "列10： 列11：  \n",
      "行13： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[452:971,485:977]\n",
      "列6： RECT:[452:977,485:990]\n",
      "列7： RECT:[452:990,485:1000]\n",
      "列8： RECT:[452:1000,485:1012]\n",
      "列9： RECT:[452:1012,485:1026]\n",
      "列10： 列11：  \n",
      "行14： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[485:971,519:977]\n",
      "列6： RECT:[485:977,519:990]\n",
      "列7： RECT:[485:990,519:1000]\n",
      "列8： RECT:[485:1000,519:1012]\n",
      "列9： RECT:[485:1012,519:1026]\n",
      "列10： 列11：  \n",
      "行15： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[519:971,552:977]\n",
      "列6： RECT:[519:977,552:990]\n",
      "列7： RECT:[519:990,552:1000]\n",
      "列8： RECT:[519:1000,552:1012]\n",
      "列9： RECT:[519:1012,552:1026]\n",
      "列10： 列11：  \n",
      "行16： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[552:971,587:977]\n",
      "列6： RECT:[552:977,587:990]\n",
      "列7： RECT:[552:990,587:1000]\n",
      "列8： RECT:[552:1000,587:1012]\n",
      "列9： RECT:[552:1012,587:1026]\n",
      "列10： 列11：  \n",
      "行17： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[587:971,620:977]\n",
      "列6： RECT:[587:977,620:990]\n",
      "列7： RECT:[587:990,620:1000]\n",
      "列8： RECT:[587:1000,620:1012]\n",
      "列9： RECT:[587:1012,620:1026]\n",
      "列10： 列11：  \n",
      "行18： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[620:971,654:977]\n",
      "列6： RECT:[620:977,654:990]\n",
      "列7： RECT:[620:990,654:1000]\n",
      "列8： RECT:[620:1000,654:1012]\n",
      "列9： RECT:[620:1012,654:1026]\n",
      "列10： 列11：  \n",
      "行19： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[654:971,687:977]\n",
      "列6： RECT:[654:977,687:990]\n",
      "列7： RECT:[654:990,687:1000]\n",
      "列8： RECT:[654:1000,687:1012]\n",
      "列9： RECT:[654:1012,687:1026]\n",
      "列10： 列11：  \n",
      "行20： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[687:971,720:977]\n",
      "列6： RECT:[687:977,720:990]\n",
      "列7： RECT:[687:990,720:1000]\n",
      "列8： RECT:[687:1000,720:1012]\n",
      "列9： RECT:[687:1012,720:1026]\n",
      "列10： 列11：  \n",
      "行21： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[720:971,754:977]\n",
      "列6： RECT:[720:977,754:990]\n",
      "列7： RECT:[720:990,754:1000]\n",
      "列8： RECT:[720:1000,754:1012]\n",
      "列9： RECT:[720:1012,754:1026]\n",
      "列10： 列11：  \n",
      "行22： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[754:971,788:977]\n",
      "列6： RECT:[754:977,788:990]\n",
      "列7： RECT:[754:990,788:1000]\n",
      "列8： RECT:[754:1000,788:1012]\n",
      "列9： RECT:[754:1012,788:1026]\n",
      "列10： 列11：  \n",
      "行23： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[788:971,821:977]\n",
      "列6： RECT:[788:977,821:990]\n",
      "列7： RECT:[788:990,821:1000]\n",
      "列8： RECT:[788:1000,821:1012]\n",
      "列9： RECT:[788:1012,821:1026]\n",
      "列10： 列11：  \n",
      "行24： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[821:971,855:977]\n",
      "列6： RECT:[821:977,855:990]\n",
      "列7： RECT:[821:990,855:1000]\n",
      "列8： RECT:[821:1000,855:1012]\n",
      "列9： RECT:[821:1012,855:1026]\n",
      "列10： 列11：  \n",
      "行25： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[855:971,889:977]\n",
      "列6： RECT:[855:977,889:990]\n",
      "列7： RECT:[855:990,889:1000]\n",
      "列8： RECT:[855:1000,889:1012]\n",
      "列9： RECT:[855:1012,889:1026]\n",
      "列10： 列11：  \n",
      "行26： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[889:971,923:977]\n",
      "列6： RECT:[889:977,923:990]\n",
      "列7： RECT:[889:990,923:1000]\n",
      "列8： RECT:[889:1000,923:1012]\n",
      "列9： RECT:[889:1012,923:1026]\n",
      "列10： 列11：  \n",
      "行27： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[923:971,957:977]\n",
      "列6： RECT:[923:977,957:990]\n",
      "列7： RECT:[923:990,957:1000]\n",
      "列8： RECT:[923:1000,957:1012]\n",
      "列9： RECT:[923:1012,957:1026]\n",
      "列10： 列11：  \n",
      "行28： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[957:971,990:977]\n",
      "列6： RECT:[957:977,990:990]\n",
      "列7： RECT:[957:990,990:1000]\n",
      "列8： RECT:[957:1000,990:1012]\n",
      "列9： RECT:[957:1012,990:1026]\n",
      "列10： 列11：  \n",
      "行29： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[990:971,1023:977]\n",
      "列6： RECT:[990:977,1023:990]\n",
      "列7： RECT:[990:990,1023:1000]\n",
      "列8： RECT:[990:1000,1023:1012]\n",
      "列9： RECT:[990:1012,1023:1026]\n",
      "列10： 列11：  \n",
      "行30： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[1023:971,1057:977]\n",
      "列6： RECT:[1023:977,1057:990]\n",
      "列7： RECT:[1023:990,1057:1000]\n",
      "列8： RECT:[1023:1000,1057:1012]\n",
      "列9： RECT:[1023:1012,1057:1026]\n",
      "列10： 列11：  \n",
      "行31： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[1057:971,1091:977]\n",
      "列6： RECT:[1057:977,1091:990]\n",
      "列7： RECT:[1057:990,1091:1000]\n",
      "列8： RECT:[1057:1000,1091:1012]\n",
      "列9： RECT:[1057:1012,1091:1026]\n",
      "列10： 列11：  \n",
      "行32： 列0： 列1： 列2： 列3： 列4： 列5： RECT:[1091:971,1651:977]\n",
      "列6： RECT:[1091:977,1651:990]\n",
      "列7： RECT:[1091:990,1651:1000]\n",
      "列8： RECT:[1091:1000,1651:1012]\n",
      "列9： RECT:[1091:1012,1651:1026]\n",
      "列10： 列11：  \n",
      "9：保存文件\n",
      "10：17 南京银行 5904_页面_12.jpg \n",
      "----17 南京银行 5904_页面_12.jpg is complete--- \n",
      "---- 17 南京银行 5904_页面_13.jpg is start---\n",
      "1：读取文件17 南京银行 5904_页面_13.jpg\n",
      "图像h=2338 w=1653\n",
      "2：去除椭圆印章\n",
      "3：检测水平线和角度\n",
      "omit_on_rot_thresh:  0.3141592653589793\n",
      "-----方向r 校正角度 0.0\n",
      "3：水平校正\n",
      "(2338, 1653)\n",
      "4：检测表格上下横线\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "5：计算表格上下线坐标\n",
      "0 2\n",
      "[0, 1653]\n",
      "左上角x1=1 y1=554,右下角x2=1652 y2=2135\n",
      "6：分割前预处理\n",
      "(1581, 1651) (1581, 1651)\n",
      "165\n",
      "7：计算行和列分割线\n",
      "47 7\n",
      "rows= [0, 51, 84, 118, 151, 185, 218, 252, 286, 319, 352, 386, 419, 453, 486, 520, 554, 587, 621, 654, 688, 721, 755, 788, 822, 856, 890, 924, 957, 991, 1024, 1058, 1092, 1126, 1160, 1194, 1228, 1262, 1296, 1329, 1363, 1397, 1431, 1464, 1499, 1533, 1651]\n",
      "colums= [0, 281, 418, 575, 767, 1017, 1651]\n",
      "8：每个cell进行识别的tablelist\n",
      "行0： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行1： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行2： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行3： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行4： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行5： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行6： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行7： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行8： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行9： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行10： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行11： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行12： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行13： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行14： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行15： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行16： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行17： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行18： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行19： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行20： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行21： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行22： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行23： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行24： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行25： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行26： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行27： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行28： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行29： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行30： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行31： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行32： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行33： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行34： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行35： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行36： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行37： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行38： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行39： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行40： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行41： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行42： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行43： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行44： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "行45： 列0： 列1： 列2： 列3： 列4： 列5：  \n",
      "9：保存文件\n",
      "10：17 南京银行 5904_页面_13.jpg \n",
      "----17 南京银行 5904_页面_13.jpg is complete--- \n",
      "---- 17 南京银行 5904_页面_14.jpg is start---\n",
      "1：读取文件17 南京银行 5904_页面_14.jpg\n",
      "图像h=2338 w=1653\n",
      "2：去除椭圆印章\n",
      "3：检测水平线和角度\n",
      "omit_on_rot_thresh:  0.3141592653589793\n",
      "4.371139006309477e-08 None False False\n",
      "-----方向sx 校正角度 0.0\n",
      "3：水平校正\n",
      "(2338, 1653)\n",
      "4：检测表格上下横线\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "(2338, 1653)\n",
      "5：计算表格上下线坐标\n",
      "0 2\n",
      "[0, 1653]\n",
      "左上角x1=1 y1=558,右下角x2=1652 y2=992\n",
      "6：分割前预处理\n",
      "(434, 1651) (434, 1651)\n",
      "165\n",
      "7：计算行和列分割线\n",
      "13 11\n",
      "rows= [0, 52, 85, 119, 152, 185, 219, 252, 286, 320, 353, 387, 1651]\n",
      "colums= [0, 284, 361, 389, 420, 515, 543, 577, 767, 1016, 1651]\n",
      "8：每个cell进行识别的tablelist\n",
      "行0： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行1： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行2： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行3： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行4： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行5： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行6： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行7： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行8： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行9： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行10： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "行11： 列0： 列1： 列2： 列3： 列4： 列5： 列6： 列7： 列8： 列9：  \n",
      "9：保存文件\n",
      "10：17 南京银行 5904_页面_14.jpg \n",
      "----17 南京银行 5904_页面_14.jpg is complete--- \n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "\n",
    "fpathe = 'I:/陈宁/对账单2/17'\n",
    "print(\"处理 {} 目录下图片\".format(fpathe))\n",
    "writer = pd.ExcelWriter(os.path.join(fpathe,'allpages.xlsx'))\n",
    "all_tablelist = []\n",
    "for fpath,dirs,fs in os.walk(fpathe):\n",
    "    \n",
    "    for file in fs:\n",
    "        fname,extension = os.path.splitext(file)\n",
    "        \n",
    "        if extension != '.jpg':\n",
    "            continue\n",
    "        print(\"---- {} is start---\".format(file))\n",
    "        tablelist = ocrimgtoexcel(file,fpath,debug=False)\n",
    "        all_tablelist.append(['No {} page'.format(fname)])\n",
    "        all_tablelist.extend(tablelist)\n",
    "        \n",
    "        print(\"----{} is complete--- \".format(file))\n",
    "sheet_data=pd.DataFrame(all_tablelist)\n",
    "sheet_data.to_excel(writer, sheet_name=fname)\n",
    "writer.save()\n",
    "writer.close()  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "hist,bins = np.histogram(img.flatten(),256,[0,256])\n",
    "cdf = hist.cumsum()\n",
    "cdf_normalized = cdf * float(hist.max()) / cdf.max()\n",
    "plt.plot(cdf_normalized, color = 'b')\n",
    "plt.hist(img.flatten(),256,[0,256], color = 'r')\n",
    "plt.xlim([0,256])\n",
    "plt.legend(('cdf','histogram'), loc = 'upper left')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "img = cv2.imread(filepath,0)\n",
    "equ = cv2.equalizeHist(img)\n",
    "res = np.hstack((img,equ)) #stacking images side-by-side\n",
    "plt.gcf().set_size_inches(60.0,40.0)\n",
    "plt.subplot(2,1,1),plt.imshow(img,'gray')\n",
    "plt.subplot(2,1,2),plt.imshow(equ,'gray')\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}

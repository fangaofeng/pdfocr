{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2\n",
      "2\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "2\n",
      "4\n",
      "2\n",
      "4\n",
      "5\n",
      "3\n"
     ]
    }
   ],
   "source": [
    "def chinese(data):\n",
    "    count = 0\n",
    "    temp = str(data)\n",
    "    for s in temp:\n",
    "        if ord(s) > 127:\n",
    "            count += 1\n",
    "        \n",
    "    return count,temp\n",
    "cardNo = \"40551240213652013\"\n",
    "AccountNo = \"320900063959000162909\"\n",
    "\n",
    "fildes = {'序号':4,'卡号':14,'交易日期':8, '交易类型AA':14, '交易类型':8, '记账金额':14,\n",
    "          '余额':14, '交易地点':24, '帐号':14, '交易笔数':8, '交易日志号':14,\"流水号\":25}\n",
    "fildesdecollator = {'序号':2,'卡号':1,'交易日期':2, '交易类型AA':2, '交易类型':2, '记账金额':2,\n",
    "          '余额':2, '交易地点':1, '帐号':1, '交易笔数':2, '交易日志号':2,\"流水号\":2}\n",
    "with open(\"text.txt\", 'w', encoding=\"utf-8\") as f:\n",
    "    for k,v in fildes.items():\n",
    "        number,pringstr = chinese(k)\n",
    "        print(number)\n",
    "        toprintStr = '{0:{wd}}'.format(pringstr,wd=v-number)\n",
    "\n",
    "        f.write(toprintStr)\n",
    "        toprintStr = '{0:{wd}}'.format('',wd=fildesdecollator[k])\n",
    "        f.write(toprintStr)\n",
    "    f.write(\"\\n\")\n",
    "    number,pringstr = chinese(122)\n",
    "    toprintStr = '{0:{wd}}'.format(\n",
    "                    pringstr, wd=6-number)\n",
    "    f.write(toprintStr)\n",
    "    f.write(\"\\n\")\n",
    "    toprintStr = '{0:{wd}}'.format(\"序号\",wd=4)\n",
    "    f.write(toprintStr)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[4, 14, 8, 14, 8, 14, 14, 24, 14, 8, 14, 25]\n"
     ]
    }
   ],
   "source": [
    "fieldesvalues = list(fildes.values())\n",
    "print(fieldesvalues)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2\n"
     ]
    }
   ],
   "source": [
    "li = ['a', 'b', 'new', 'D', 'z', 'example', 'new', 'two', 'elements']\n",
    "a=li.index('new')\n",
    "print(a)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   122\n",
      "122\n"
     ]
    }
   ],
   "source": [
    "toprintStr = '{0:{wd}}'.format(\n",
    "                    122, wd=6)\n",
    "toprintStr = '{0:6}'.format(\n",
    "                    122)\n",
    "print(toprintStr)\n",
    "print(\"122\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "6\n",
      "122   \n"
     ]
    }
   ],
   "source": [
    "toprintStr = '{0:6}'.format(\n",
    "                    \"122\")\n",
    "print(len(toprintStr))\n",
    "print(toprintStr)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   zhang\n",
      "zhangddff         \n",
      "000zhang\n",
      "zhangaaa\n",
      "ppzhangppp\n",
      "序号\n"
     ]
    }
   ],
   "source": [
    "print('{:>8}'.format('zhang'))\n",
    "print('{:18}'.format('zhangddff'))\n",
    "print('{:0>8}'.format('zhang'))\n",
    "print('{:a<8}'.format('zhang'))\n",
    "print('{:p^10}'.format('zhang'))\n",
    "print('{0:{wd}}'.format(\"序号\",wd=2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['受托理财申购', 'money entrusted to apply for buy']"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a=\"受托理财申购|money entrusted to apply for buy\"\n",
    "\n",
    "a.split(\"|\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['受托理财申购 money entrusted to apply for buy']"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a=\"受托理财申购 money entrusted to apply for buy\"\n",
    "\n",
    "a.split(\"|\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.2"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
